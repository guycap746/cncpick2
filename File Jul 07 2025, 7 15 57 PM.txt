ðŸ§© Assertion Helpers â€“ cncpick2

This document explains the role of assert_helpers.py, which contains reusable logic to validate that each step of the cncpick2 system behaves correctly during testing.

â¸»

ðŸŽ¯ Purpose
	â€¢	Provide reusable assertions for system sanity
	â€¢	Ensure each agent is correctly performing its designated tasks
	â€¢	Power the test_runner.py validation flow

â¸»

âœ… Hook Summary

Each hook inspects logs and throws an AssertionError if validation fails:

hook_after_spawn(logs)
	â€¢	Verifies object_spawned event exists
	â€¢	Ensures originating agent is simulator_agent

hook_after_detection(logs)
	â€¢	Confirms object was detected by vision_agent
	â€¢	Checks for height_mm presence in metadata

hook_after_assignment(logs)
	â€¢	Ensures scoring_agent assigned the object
	â€¢	Confirms assigned_to field exists

hook_after_pickup(logs)
	â€¢	Validates motion_agent picked an object
	â€¢	Checks that object_id is logged

hook_after_drop(logs)
	â€¢	Confirms object drop completed by motion_agent
	â€¢	Verifies drop_location is included

â¸»

ðŸ“Š Summary Stats

The helper also includes a function:

generate_results_summary(logs, path="tests/logs/results_summary.json")

	â€¢	Tallies event types
	â€¢	Writes a JSON summary to disk

â¸»

ðŸ§ª Integration

Used by:
	â€¢	test_runner.py
	â€¢	Sanity tests and regression checkers

â¸»

ðŸ“Œ Summary

These assertion helpers ensure every stage of the object lifecycle is properly executed by the correct agent and annotated with required metadata. They are a key part of test reliability.